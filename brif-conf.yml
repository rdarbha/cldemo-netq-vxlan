# This is meant to be included in other main playbooks
---
  - name: Add server ports to interfaces file for leaves
    blockinfile:
      dest: /etc/network/interfaces
      marker: "#{mark} {{ item }} ANSIBLE MANAGED BLOCK"
      block: |

        auto {{ item }}
        iface {{ item }}
           bridge-access {{ default_vlan }}

    become: true
    with_items: "{{ ansible_interfaces }}"
    when: "{{ 'leaf' in group_names and item|match(leaf_to_server_ports) }}"
    tags:
      - ifconfig
      - leaf

  - name: Make bonds out of each individual server port
    blockinfile:
      dest: /etc/network/interfaces
      marker: "#{mark} bond-{{ item }} ANSIBLE MANAGED BLOCK"
      block: |

        auto bond-{{ item }}
        iface bond-{{ item }}
          bond-slaves {{ item }}
          bond-mode 802.3ad
          bond-miimon 100
          bond-lacp-rate 1
          bond-min-links 1
          bond-xmit-hash-policy layer3+4
          clag-id {{ item.split('p')[1] }}
          mstpctl-portadminedge yes
          mstpctl-bpduguard yes
          bridge-access {{ default_vlan }}
          post-up ip link set bond-{{ item }} promisc on

    become: true
    with_items: "{{ ansible_interfaces }}"
    when: "{{ 'leaf' in group_names and item|match(leaf_to_server_ports) and dual_attach_hosts }}"
    tags:
      - ifconfig
      - leaf

  - name: Construct MLAG Local IP
    set_fact:
      my_clag_ip: |
        {% if (my_node_id|int %2) == 1 %}
           169.254.1.1/30
        {%else%}
           169.254.1.2/30
        {%endif%}
    when: "{{ 'leaf' in group_names and dual_attach_hosts }}"
    tags:
      - compute
      - leaf

  - name: Construct MLAG Peer IP
    set_fact:
      my_clag_peer_ip: |
        {% if (my_node_id|int % 2) == 1 %}
           169.254.1.2
        {%else%}
           169.254.1.1
        {%endif%}
    when: "{{ 'leaf' in group_names and dual_attach_hosts }}"
    tags:
      - compute
      - leaf

  - name: Construct CLAG SysMAC
    set_fact:
      my_clag_sys_mac: |
        {% if (my_node_id|int % 2) == 1 %}
          {{ "%s%02d"|format(clag_base_sys_mac, (my_node_id|int)) }}
        {%else%}
          {{ "%s%02d" | format(clag_base_sys_mac, (my_node_id|int - 1)) }}
        {%endif%}
    when: "{{ 'leaf' in group_names and dual_attach_hosts }}"
    tags:
      - compute
      - leaf

  - name: Construct CLAG Priority
    set_fact:
      my_clag_prio: |
        {% if (my_node_id|int % 2) == 1 %}
           4096
        {%else%}
           8192
        {%endif%}
    when: "{{ 'leaf' in group_names and dual_attach_hosts }}"
    tags:
      - compute
      - leaf

  - name: Add CLAG peer ports
    blockinfile:
      dest: /etc/network/interfaces
      marker: "#{mark} {{ item }} ANSIBLE MANAGED BLOCK"
      block: |

        auto {{ item }}
        iface {{ item }}

    become: true
    with_items: "{{ ansible_interfaces }}"
    when: "{{ 'leaf' in group_names and item|match(clag_peer_ports) and dual_attach_hosts }}"
    tags:
      - ifconfig
      - leaf

  - name: Configure MLAG peering link
    blockinfile:
      dest: /etc/network/interfaces
      marker: "#{mark} peerlink ANSIBLE MANAGED BLOCK"
      block: |

        auto peer-link
        iface peer-link
          bond-slaves regex {{ clag_peer_ports }}
          bond-mode 802.3ad
          bond-miimon 100
          bond-lacp-rate 1
          bond-min-links 1
          bond-xmit-hash-policy layer3+4
          bridge-vids 20 4094
          post-up ip link set peer-link promisc on

        # sub-interface for clagd communication
        #
        auto peer-link.4094
        iface peer-link.4094
          address {{ my_clag_ip|trim }}
          clagd-peer-ip {{ my_clag_peer_ip|trim }}
          clagd-sys-mac {{ my_clag_sys_mac|trim }}
          clagd-priority {{ my_clag_prio|trim }}
          clagd-args --vm
    become: true
    when: "{{ 'leaf' in group_names and dual_attach_hosts }}"
    tags:
      - ifconfig
      - leaf

  - name: Identify subnet from which hosts are assigned IPs
    set_fact:
      host_ip_base: |
        {% if (my_node_id|int %2) == 1 %}
          {{ server_ip_base + my_node_id|string + '.' + default_vlan|string }}
        {%else%}
          {{ server_ip_base + (my_node_id|int -1)|string + '.' + default_vlan|string }}
        {%endif%}
    when: "{{ 'leaf' in group_names and dual_attach_hosts }}"

  - name: Identify subnet from which hosts are assigned IPs
    set_fact:
      host_ip_base: |
        {{ server_ip_base + my_node_id|string + '.' + default_vlan|string }}
    when: "{{ 'leaf' in group_names and not dual_attach_hosts }}"


  - name: Extract low order subnet bits for bridge for dual-attach hosts
    set_fact:
      my_br_ip: |
        {% if (my_node_id|int %2) == 1 %}
          {{ host_ip_base.split()[0] + '.253/24' }}
        {%else%}
          {{ host_ip_base.split()[0] + '.252/24' }}
        {%endif%}
    when: "{{ 'leaf' in group_names and dual_attach_hosts }}"
    tags:
      - compute
      - ifconfig
      - always

  - name: Extract low order subnet bits for bridge for single attach hosts
    set_fact:
      my_br_ip: |
          {{ host_ip_base.split()[0] + '.253/24' }}
    when: "{{ 'leaf' in group_names and not dual_attach_hosts }}"
    tags:
      - compute
      - ifconfig
      - always

  - name: Compute VRR address
    set_fact:
      my_br_vrr_ip: |
        {{ host_ip_base.split()[0] + '.254/32' }}
    when: "{{ 'leaf' in group_names and dual_attach_hosts }}"
    tags:
      - compute
      - ifconfig
      - always

  - name: Add bridge and SVI on leaves on dual-attach ToRs/hosts
    blockinfile:
      dest: /etc/network/interfaces
      marker: "#{mark} bridge ANSIBLE MANAGED BLOCK"
      block: |

        auto bridge
        iface bridge
          bridge-vlan-aware yes
          bridge-ports glob bond-{{ leaf_to_server_ports }} peer-link
          bridge-vids {{ default_vlan }}
          bridge-stp on

        auto bridge.{{ default_vlan }}
        iface bridge.{{ default_vlan }} inet static
          address {{ my_br_ip }}
          address-virtual 00:00:5e:00:01:01 {{ my_br_vrr_ip|trim }}

    become: true
    when: "{{ 'leaf' in group_names and dual_attach_hosts }}"
    tags:
      - ifconfig
      - leaf

  - name: Add bridge and SVI on leaves on single-attach ToRs/hosts
    blockinfile:
      dest: /etc/network/interfaces
      marker: "#{mark} bridge ANSIBLE MANAGED BLOCK"
      block: |

        auto bridge
        iface bridge
          bridge-vlan-aware yes
          bridge-vids {{ default_vlan }}
          bridge-stp on
          bridge-ports glob {{ leaf_to_server_ports }}

        auto bridge.{{ default_vlan }}
        iface bridge.{{ default_vlan }} inet static
          address {{ my_br_ip }}

    become: true
    when: "{{ 'leaf' in group_names and not dual_attach_hosts }}"
    tags:
      - ifconfig
      - leaf
